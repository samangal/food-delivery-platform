version: '3.8'

services:
 


  
  auth-db:
    image: postgres:15
    container_name: auth-db
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: authdb
    ports:
      - "5439:5432"
    networks:
      - food-net
    volumes:
      - auth-pgdata:/var/lib/postgresql/data

 

  cart-db:
    image: postgres:15
    container_name: cart-db
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: cartdb
    ports:
      - "5436:5432"
    networks:
      - food-net 
    volumes:
      - cart-pgdata:/var/lib/postgresql/data

  
 
  order-db:
    image: postgres:15
    container_name: order-db
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: orderdb
    ports:
      - "5433:5432"
    networks:
      - food-net
    volumes:
      - order-pgdata:/var/lib/postgresql/data
 
 

  payment-db:
    image: postgres:15
    container_name: payment-db
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: paymentdb
    ports:
      - "5437:5432"
    networks:
      - food-net
    volumes:
      - payment-pgdata:/var/lib/postgresql/data

 

  product-db:
    image: postgres:15
    container_name: product-db
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: productdb
    ports:
      - "5435:5432"
    networks:
      - food-net
    volumes:
      - product-pgdata:/var/lib/postgresql/data


  inventory-db:
    image: postgres:15
    container_name: inventory-db
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: inventorydb
    ports:
      - "5438:5432"
    networks:
      - food-net
    volumes:
      - inventory-pgdata:/var/lib/postgresql/data

 

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
    networks:
      - food-net

  kafka:
    image: confluentinc/cp-kafka:latest
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    depends_on:
      - zookeeper
    networks:
      - food-net
  rabbitmq:
    image: rabbitmq:3-management
    ports:
      - "5672:5672"
      - "15672:15672"  # For UI
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    networks:
      - food-net

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.13.4
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
    ports:
      - "9200:9200"
    networks:
      - food-net

  logstash:
    image: docker.elastic.co/logstash/logstash:8.13.4
    volumes:
      - ./logstash/logstash.conf:/usr/share/logstash/pipeline/logstash.conf
      - ./logs:/logs
    ports:
      - "5044:5044"
    depends_on:
      - elasticsearch
    networks:
      - food-net

  kibana:
    image: docker.elastic.co/kibana/kibana:8.13.4
    ports:
      - "5601:5601"
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
    depends_on:
      - elasticsearch
    networks:
      - food-net
  prometheus:
    image: prom/prometheus
    volumes:
      - ./monitoring/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"
    networks:
      - food-net

  grafana:
    image: grafana/grafana
    ports:
      - "3000:3000"
    depends_on:
      - prometheus
    networks:
      - food-net
networks:
  food-net:

volumes:
  auth-pgdata:
  order-pgdata:
  cart-pgdata:
  inventory-pgdata:
  payment-pgdata:
  product-pgdata:

  
  
  
  