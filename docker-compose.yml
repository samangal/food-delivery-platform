version: '3.8'

services:
  config-server:
    build:
      context: ./config-server
    ports:
      - "8888:8888"
    environment:
      - SPRING_PROFILES_ACTIVE=default
      - SPRING_CLOUD_CONFIG_SERVER_GIT_URI=https://github.com/samangal/food-config-repo
      - SPRING_CLOUD_CONFIG_SERVER_GIT_USERNAME=${GIT_USERNAME}
      - SPRING_CLOUD_CONFIG_SERVER_GIT_PASSWORD=${GIT_PASSWORD}
    networks:
      - food-net

  discovery-server:
    build:
      context: ./discovery-server
    ports:
      - "8761:8761"
    networks:
      - food-net

  api-gateway:
    build:
      context: ./api-gateway
    ports:
      - "8080:8080"
    environment:
      - SPRING_APPLICATION_NAME=api-gateway
      - SPRING_CONFIG_IMPORT=optional:configserver:http://config-server:8888
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://discovery-server:8761/eureka/
    depends_on:
      - discovery-server
      - config-server
    networks:
      - food-net

  notification-service:
    build:
      context: ./notification-service
    ports:
      - "8087:8087"
    environment:
      - SPRING_APPLICATION_NAME=notification-service
      - SPRING_CONFIG_IMPORT=optional:configserver:http://config-server:8888
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://discovery-server:8761/eureka/
    depends_on:
      - discovery-server
      - config-server
      - kafka
    networks:
      - food-net

  auth-db:
    image: postgres:15
    container_name: auth-db
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: authdb
    ports:
      - "5439:5432"
    networks:
      - food-net
    volumes:
      - auth-pgdata:/var/lib/postgresql/data

  auth-service:
    build:
      context: ./auth-service
    ports:
      - "8081:8081"
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://auth-db:5432/authdb
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=password
      - SPRING_APPLICATION_NAME=auth-service
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://discovery-server:8761/eureka/
    depends_on:
      - auth-db
      - discovery-server
      - config-server
    networks:
      - food-net
 
  order-db:
    image: postgres:15
    container_name: order-db
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: orderdb
    ports:
      - "5433:5432"
    networks:
      - food-net
    volumes:
      - order-pgdata:/var/lib/postgresql/data

  order-service:
    build:
      context: ./order-service
    ports:
      - "8082:8082"
    environment:
      - SPRING_CONFIG_IMPORT=optional:configserver:http://config-server:8888
      - SPRING_CLOUD_CONFIG_FAIL_FAST=true
      - SPRING_RETRY_MAX_ATTEMPTS=20
      - SPRING_RETRY_INITIAL_INTERVAL=3000
      - SPRING_DATASOURCE_URL=jdbc:postgresql://order-db:5432/orderdb
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=password
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://discovery-server:8761/eureka/
      - SPRING_APPLICATION_NAME=order-service
    depends_on:
      - discovery-server
      - order-db
      - config-server
    networks:
      - food-net


  cart-db:
    image: postgres:15
    container_name: cart-db
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: cartdb
    ports:
      - "5436:5432"
    networks:
      - food-net
    volumes:
      - cart-pgdata:/var/lib/postgresql/data

  inventory-db:
    image: postgres:15
    container_name: inventory-db
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: inventorydb
    ports:
      - "5438:5432"
    networks:
      - food-net
    volumes:
      - inventory-pgdata:/var/lib/postgresql/data

  payment-db:
    image: postgres:15
    container_name: payment-db
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: paymentdb
    ports:
      - "5437:5432"
    networks:
      - food-net
    volumes:
      - payment-pgdata:/var/lib/postgresql/data

  product-db:
    image: postgres:15
    container_name: product-db
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: productdb
    ports:
      - "5435:5432"
    networks:
      - food-net
    volumes:
      - product-pgdata:/var/lib/postgresql/data


  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
    networks:
      - food-net

  kafka:
    image: confluentinc/cp-kafka:latest
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    depends_on:
      - zookeeper
    networks:
      - food-net

  rabbitmq:
    image: rabbitmq:3-management
    ports:
      - "5672:5672"
      - "15672:15672"  # For UI
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    networks:
      - food-net


networks:
  food-net:

volumes:
  auth-pgdata:
  order-pgdata:
  cart-pgdata:
  inventory-pgdata:
  payment-pgdata:
  product-pgdata:
  
  
  
  